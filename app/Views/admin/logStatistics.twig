{% extends "master.twig" %}


{% block head %}
    <link href="css/bootstrap.css" rel="stylesheet">
    <!-- Font Awesome -->
    {#<link href="css/font-awesome.min.css" rel="stylesheet">#}
    <!-- NProgress -->
    <link href="css/nprogress.css" rel="stylesheet">

    <!-- Custom Theme Style -->
    {#<link href="css/custom.min.css" rel="stylesheet">#}


{% endblock head %}

    {% block title %} Month Stats{% endblock title %}


{% block content %}

    <div>
        <ul class="nav nav-tabs">
            <li id="years" role="presentation" class="active"><a style="font-weight: bold; font-size: large;">Years</a></li>
            <li id="months" role="presentation"><a style="font-weight: bold; font-size: large;">Months</a></li>
            <li id="days" role="presentation"><a style="font-weight: bold; font-size: large;">Days</a></li>
        </ul>

        <div>
            <label for="gender">Choose gender: </label>
            <select name="gender" id="gender" style="display: block;" required>
                <option value="m">Male</option>
                <option value="f">Female</option>
                <option value="b">Both</option>
            </select>
            <label for="allAge" style="display: inline-block;">All Ages: </label>
            <input type="checkbox" name="allAge" id="allAge" checked onclick="if(jQuery('#allAge').is(':checked')){
                jQuery('#ageUpper').attr('disabled', 'disabled');
                jQuery('#ageLower').attr('disabled', 'disabled');
            } else {
                jQuery('#ageUpper').removeAttr('disabled');
                jQuery('#ageLower').removeAttr('disabled');
            }
            ; ">
            <label for="age" style="display: inline-block;"> OR Select Age Range: </label>
            <p style="display: inline-block;">From:</p>
            <input type="number" min="16" name="age" id="ageUpper" value="16" disabled>
            <p style="display: inline-block;">To:</p>
            <input type="number" min="16" name="age" id="ageLower" value="80" disabled>
            <input type="submit" id="filter">
        </div>

        <div id="yearDiv" style="width: 80%; height: 50%; margin: auto;">
            <canvas id="yearChart"></canvas>
        </div>


        <div id="monthsDiv" style="width: 80%; height: 50%; margin: auto; display: none;">
            <canvas id="monthChart"></canvas>
        </div>


        <div id="daysDiv" style="width: 80%; height: 50%; margin: auto; display: none;">
            <canvas id="dayChart"></canvas>
        </div>

    </div>

    <script src="js/jquery.js"></script>
    <!-- Bootstrap -->
    <script src="js/bootstrap.js"></script>
    <!-- FastClick -->
    <script src="js/fastclick.js"></script>
    <!-- NProgress -->
    <script src="js/nprogress.js"></script>
    <!-- Chart.js -->
    <script src="js/Chart.min.js"></script>

    <!-- Custom Theme Scripts -->
    <script src="js/custom.min.js"></script>


    <script>
        Chart.defaults.global.legend = {
            enabled: false
        };

        var ctx = document.getElementById("yearChart");
        var yearChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [
                    {% for key,value in years %}
                    {% if loop.last %}
                    "{{ key }}"
                    {% else %}
                    "{{ key }}",
                    {% endif %}

                    {% endfor %}
                ],

                {#{% for key,value in vals %}#}
                {##}
                {#{% endfor %}#}

                datasets: [{
                    label: '# of Visits',
                    backgroundColor: "#26B99A",
                    data: [
                        {% for key,value in years %}
                        {% if loop.last %}
                        {{ value }}
                        {% else %}
                        {{ value }},
                        {% endif %}

                        {% endfor %}
                    ]
                }

                ]
            },

            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>

    <script>
        Chart.defaults.global.legend = {
            enabled: false
        };

        var ctx = document.getElementById("dayChart");
        var dayChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: [
                    {% for key,value in days %}
//                        "January", "February", "March", "April", "May", "June", "July"
                    {% if loop.last %}
                    "{{ key }}"
                    {% else %}
                    "{{ key }}",
                    {% endif %}

                    {% endfor %}
                ],

                {#{% for key,value in vals %}#}
                {##}
                {#{% endfor %}#}

                datasets: [{
                    label: '# of Visits',
                    backgroundColor: "#26B99A",
                    data: [
//                            51, 30, 40, 28, 92, 50, 45
                        {% for key,value in days %}
//                        "January", "February", "March", "April", "May", "June", "July"
                        {% if loop.last %}
                        {{ value }}
                        {% else %}
                        {{ value }},
                        {% endif %}

                        {% endfor %}
                    ]
                }
//                , {
//                    label: '# of Votes',
//                    backgroundColor: "#03586A",
//                    data: [41, 56, 25, 48, 72, 34, 12]
//                }

                ]
            },

            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>

    <script>
        jQuery('#months').click(function() {
//            console.log(jQuery(this));
            jQuery(this).toggleClass('active');
            jQuery('#years').removeClass('active');
            jQuery('#days').removeClass('active');
            jQuery('#monthsDiv').css('display','');
            jQuery('#yearDiv').css('display','none');
            jQuery('#daysDiv').css('display','none');
        });
        jQuery('#years').click(function() {
//            console.log(jQuery(this));
            jQuery(this).toggleClass('active');
            jQuery('#months').removeClass('active');
            jQuery('#days').removeClass('active');
            jQuery('#yearDiv').css('display','');
            jQuery('#monthsDiv').css('display','none');
            jQuery('#daysDiv').css('display','none');
        });
        jQuery('#days').click(function() {
//            console.log(jQuery(this));
            jQuery(this).toggleClass('active');
            jQuery('#years').removeClass('active');
            jQuery('#months').removeClass('active');
            jQuery('#daysDiv').css('display','');
            jQuery('#monthsDiv').css('display','none');
            jQuery('#yearDiv').css('display','none');
        });

    </script>

    <script>
        vals = '{{ months|json_encode|raw }}';
//        console.log(vals);
        var valsEncoded = jQuery.parseJSON(vals);
        var ctx = document.getElementById("monthChart");
        var monthChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Object.keys(valsEncoded),
                datasets: [
                    {
                        label: '# of Visits',
                        backgroundColor: "#26B99A",
                        data: Object.values(valsEncoded)
                    }
                ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
//        console.log(valsEncoded);
        {#jQuery.each(obj, function(key,value) {#}
            {#console.log(value);#}
        {#});#}
        jQuery('#filter').click(function () {
            console.log("dfsgdfg");

            var selectInput = document.getElementById("gender");
            var selectValue = selectInput.options[selectInput.selectedIndex].value;
            console.log(selectValue);
            //get age range
            var year = new Date().getFullYear();
            console.log(year);
            if (jQuery('#allAge').is(':checked')){
                console.log("CHECKED");
            } else {
                var ageLower = 2016 - jQuery('#ageLower').val();
                var ageUpper = 2016 - jQuery('#ageUpper').val();
                var ageLower = ageLower + "-01-01";
                var ageUpper = ageUpper + "-12-31";
            }

            console.log(ageLower);
            console.log(ageUpper);

            monthChart.destroy();

            if (jQuery('#years').hasClass('active')){
                console.log("YEARS ACTIVE");
                jQuery.ajax({
                    type: "POST",
                    url: '/adminstatsyear',
                    data: {
                        gender: selectValue,
                        ageUpper: ageUpper,
                        ageLower: ageLower
                    },
                    success: function (year) {
                        console.log('Success Message: ' + year);
                        valsEncoded = jQuery.parseJSON(year);
                        console.log(valsEncoded);
                        Chart.defaults.global.legend = {
                            enabled: false
                        };
                        var ctx = document.getElementById("yearChart");
                        var yearChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: Object.keys(valsEncoded),
                                datasets: [
                                    {
                                        label: '# of Visits',
                                        backgroundColor: "#26B99A",
                                        data: Object.values(valsEncoded)
                                    }
                                ]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });
                    }
                });
            }

            if (jQuery('#months').hasClass('active')){
                console.log("MONTHS ACTIVE");
                jQuery.ajax({
                    type: "POST",
                    url: '/adminstatsmonth',
                    data: {
                        gender: selectValue,
                        ageUpper: ageUpper,
                        ageLower: ageLower
                    },
                    success: function (months) {
//                    vals = months;
//                    console.log(vals);
                        console.log('Success Message: ' + months);
//                    alert('the server returned ' + months);
                        valsEncoded = jQuery.parseJSON(months);
                        console.log(valsEncoded);
                        Chart.defaults.global.legend = {
                            enabled: false
                        };
                        var ctx = document.getElementById("monthChart");
                        var monthChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: Object.keys(valsEncoded),
                                datasets: [
                                    {
                                        label: '# of Visits',
                                        backgroundColor: "#26B99A",
                                        data: Object.values(valsEncoded)
                                    }
                                ]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });
                    }
                });
            }

            if (jQuery('#days').hasClass('active')){
                console.log("DAYS ACTIVE");
                jQuery.ajax({
                    type: "POST",
                    url: '/adminstatsday',
                    data: {
                        gender: selectValue,
                        ageUpper: ageUpper,
                        ageLower: ageLower
                    },
                    success: function (day) {
//                    vals = months;
//                    console.log(vals);
                        console.log('Success Message: ' + day);
//                    alert('the server returned ' + months);
                        valsEncoded = jQuery.parseJSON(day);
                        console.log(valsEncoded);
                        Chart.defaults.global.legend = {
                            enabled: false
                        };
                        var ctx = document.getElementById("dayChart");
                        var dayChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: Object.keys(valsEncoded),
                                datasets: [
                                    {
                                        label: '# of Visits',
                                        backgroundColor: "#26B99A",
                                        data: Object.values(valsEncoded)
                                    }
                                ]
                            },
                            options: {
                                scales: {
                                    yAxes: [{
                                        ticks: {
                                            beginAtZero: true
                                        }
                                    }]
                                }
                            }
                        });
                    }
                });
            }



        });



    </script>




{% endblock content %}

{% block info %}
{% endblock info %}




